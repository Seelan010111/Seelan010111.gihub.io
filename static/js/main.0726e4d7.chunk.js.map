{"version":3,"sources":["components/Carousel.jsx","components/Home.jsx","components/About.jsx","components/News.jsx","components/CustomNavbar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ControlledCarousel","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelect","bind","assertThisInitialized","state","index","direction","selectedIndex","e","setState","_this$state","react_default","a","createElement","Carousel","activeIndex","onSelect","Item","className","src","process","alt","Caption","Component","Home","Container","Row","Col","sm","Jumbotron","react_router_dom","to","Button","variant","Carousel_ControlledCarousel","About","CustomNavbar","Navbar","bg","Brand","width","height","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","eventKey","Form","inline","FormControl","type","placeholder","App","CustomNavbar_CustomNavbar","react_router","exact","path","component","News","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0726e4d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\n\n\nexport default class ControlledCarousel extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.handleSelect = this.handleSelect.bind(this);\n\n      this.state = {\n        index: 0,\n        direction: null,\n      };\n    }\n\n    handleSelect(selectedIndex, e) {\n      this.setState({\n        index: selectedIndex,\n        direction: e.direction,\n      });\n    }\n\n    render() {\n      const { index, direction } = this.state;\n\n      return (\n        <Carousel\n          activeIndex={index}\n          direction={direction}\n          onSelect={this.handleSelect}\n        >\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={process.env.PUBLIC_URL + '/assets/me.png'}\n              alt=\"First slide\"\n            />\n            <Carousel.Caption>\n              <h3>Me</h3>\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={process.env.PUBLIC_URL + '/assets/me.png'}\n              alt=\"Second slide\"\n            />\n            <Carousel.Caption>\n              <h3>Again</h3>\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n            </Carousel.Caption>\n          </Carousel.Item>\n        </Carousel>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Jumbotron, Row, Col, Image, Button, Containerl, Container} from 'react-bootstrap';\nimport './Home.css';\nimport ControlledCarousel from './Carousel';\n\nexport default class Home extends Component {\n\n    render(){\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Col sm={11}>\n                        <Jumbotron>\n                            <h1>Hello World!</h1>\n                            <p>\n                                My name is Norwell Seelan Sigwebela. I am a Full stack Software Engineer<br />\n                            </p>\n                            <Link to=\"/about\">\n                                <Button variant=\"primary\">About</Button>\n                            </Link>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <ControlledCarousel />\n                </Row>\n            </Container>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Jumbotron } from 'react-bootstrap';\n\n\nexport default class About extends Component {\n\n    render(){\n        return (\n            <div>\n                About\n            </div>\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Jumbotron, Grid, Row, Col, Image, Button } from 'react-bootstrap';\nimport './Home.css';\n\n\nexport default class About extends Component {\n\n    render(){\n        return (\n            <div>\n                News\n            </div>\n\n        );\n    }\n\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, NavItem, Row, Col} from 'react-bootstrap';\n\n\nexport default class CustomNavbar extends Component {\n    render(){\n        return (\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>\n              <Link to=\"/\">\n                <img\n                    alt=\"\"\n                    src={process.env.PUBLIC_URL + '/assets/logo.png'} \n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                />\n                {' Norwell Seelan Sigwebela'}\n              </Link>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\" variant=\"tabs\" defaultActiveKey=\"/\">\n                    <Row>\n                        <Col>\n                            <Nav.Item>\n                                <Link  eventKey=\"1\" to=\"/\"> Home </Link>\n                            </Nav.Item>\n                        </Col >\n                        <Col>\n                            <Nav.Item>\n                                <Link eventKey=\"2\" to=\"/about\"> About </Link>\n                            </Nav.Item>\n                        </Col>\n                        <Col>\n                        <Nav.Item>\n                            <Link  eventKey=\"3\" to=\"/news\"> News </Link>\n                        </Nav.Item>\n                        </Col>\n                    </Row>\n                </Nav>\n                <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n                </Form>\n            </Navbar.Collapse>\n          </Navbar>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport News from './components/News';\nimport CustomNavbar from './components/CustomNavbar'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <CustomNavbar />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/news\" component={News} />\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}